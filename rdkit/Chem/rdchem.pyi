from typing import Dict

class Atom: ...
class Bond: ...

class Mol:
    def GetNumAtoms(self: Mol, onlyExplicit: bool) -> int: ...
    def GetNumHeavyAtoms(self: Mol) -> int: ...
    def GetAtomWithIdx(self: Mol, idx: int) -> Atom: ...
    def GetNumBonds(self: Mol, onlyHeavy: bool) -> int: ...
    def HasSubstructMatch(
        self: Mol,
        query: Mol,
        recursionPossible: bool,
        useChirality: bool,
        useQueryQueryMatches: bool,
    ) -> str: ...

def MolFromTPLFile(fileName: str, sanitize: bool, skipFirstConf: bool) -> Mol: ...
def MolFromTPLBlock(fileBlock: str, sanitize: bool, skipFirstConf: bool) -> Mol: ...
def MolFromMolFile(
    molFileName: str, sanitize: bool, removeHs: bool, strictParsing: bool
) -> Mol: ...
def MolFromSmiles(smi: str, sanitize: bool, replacements: Dict[str, str]) -> Mol: ...

# def MolFromSmarts(smi: str, mergeHs: bool) -> Mol: ...
# def MolToSmiles(mol: Mol) -> str: ...
